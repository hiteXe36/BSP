#!/bin/bash

# Dieses Skript fuehrt die Simulation fÃ¼r alle Ersetzungsalgorithmen, unterschiedliche
# Belegungen des zu sortierenden Felds und alle Framegroessen durch

seed_values="2806 225 353 540 964 1088 1205 1288 2364 2492 2601 2680 5015 5321 6748 7413 7663 8555 8897 9174 9838"
page_sizes="8 16 32 64"
page_rep_algo="FIFO CLOCK AGING"
search_algo="quicksort bubblesort"

ref_result_dir="./LogFiles_mit_SEED_2806"

# Simulation summary file
all_results=all_results

# clean up result file 
rm -rf results $all_results
mkdir results


for s in $page_sizes ; do
    # page size be be seed via C define Statement
    # compile 
    make clean
    make VMEM_PAGESIZE=$s 

    # iterate for all page replacement algorithms and all seed values
    for a in $page_rep_algo ; do
    for sa in $search_algo ; do 
    for seed in $seed_values ; do
        echo "Run simulation for seed = $seed search algo $sa and page rep. algo $a and page size $s"

        # delete all shared memory areas
        # ipcrm -ashm

        # start memory manageer
        ./bin/mmanage -$a  &
         mmanage_pid=$!

         sleep 1  # wait for mmange to create shared objects

         # start application, save pagefaults and results files for current seed 
         outputfile="./results/output_${seed}_${sa}_${a}_${s}.txt"
         ./bin/vmappl -$sa -seed=$seed > $outputfile

         kill -s SIGINT $mmanage_pid

         # save pagefaults 
         pagefaults=$(grep "Page fault" logfile.txt | tail -n1 | awk "{ print \$3 }")
         printf "seed = %6i page_rep_algo = %7s search_algo = %12s pagesize = %4i pagefaults %7s \n" "$seed" "$a" "$sa" "$s" "$pagefaults" >> $all_results

         # save result files and compare for seed=2806
         mv logfile.txt ./results/logfile_${seed}_${sa}_${a}_${s}.txt  
         if [ "$seed" = "2806" ]; then
             echo "=============== COMPARE results for logfile_${sa}_${a}_${s}.txt =================="
             diff results/logfile_${seed}_${sa}_${a}_${s}.txt  ${ref_result_dir}/logfile_${sa}_${a}_${s}.txt
             echo "=============== COMPARE results for output_${sa}_${a}_${s}.txt =================="
             diff results/output_${seed}_${sa}_${a}_${s}.txt   ${ref_result_dir}/output_${sa}_${a}_${s}.txt
            echo "============================================================================"
         fi 
    done
    done
    done
done
# EOF
